{"version":3,"file":"scrollyfills.modern.js","sources":["../src/scrollend.js"],"sourcesContent":["// @ts-check\n\nconst supported = \"onscrollend\" in window\n\nif (!supported) {\n  const scrollendEvent = new Event('scrollend');\n  const pointers = new Set();\n\n  // Track if any pointer is active\n  document.addEventListener('touchstart', e => {\n    for (let touch of e.changedTouches) \n      pointers.add(touch.identifier)\n  }, {passive: true});\n\n  document.addEventListener('touchend', e => {\n    for (let touch of e.changedTouches)\n      pointers.delete(touch.identifier)\n  }, {passive: true});\n\n  // Map of scroll-observed elements.\n  let observed = new WeakMap();\n  let handle;\n  let snapshot;\n\n  // Forward and observe calls to a native method.\n  function observe(proto, method, handler) {\n    let native = proto[method];\n    proto[method] = function() {\n      let args = Array.prototype.slice.apply(arguments, [0]);\n      native.apply(this, args);\n      args.unshift(native);\n      handler.apply(this, args);\n    }\n  }\n  \n  function onAddListener(originalFn, type, handler, options) {\n    // Polyfill scrollend event on any element for which the developer listens\n    // to 'scrollend' explicitly or 'scroll' (so that adding a scrollend listener\n    // from within a scroll listener works).\n    if (type != 'scroll' && type != 'scrollend')\n      return;\n\n    let scrollport = this;\n    let data = observed.get(scrollport);\n    if (data === undefined) {\n      data = {\n        scrollListener: (evt) => {\n          if(typeof handle !== 'undefined') {\n            cancelAnimationFrame(handle);\n          }\n          handle = requestAnimationFrame(() => handle = requestAnimationFrame(() => {\n            if(typeof snapshot === 'undefined') {\n              snapshot = handle;\n            }\n            if(handle - snapshot > 30) {\n              if (pointers.size) {\n                // if pointer(s) are down, wait longer\n                setTimeout(data.scrollListener, 100)\n              }\n              else {\n                // dispatch\n                scrollport.dispatchEvent(scrollendEvent);\n              }\n              snapshot = handle;\n            }\n          }));\n        },\n        listeners: 0, // Count of number of listeners.\n      };\n      originalFn.apply(scrollport, ['scroll', data.scrollListener]);\n      observed.set(scrollport, data);\n    }\n    data.listeners++;\n  }\n\n  function onRemoveListener(originalFn, type, handler) {\n    if (type != 'scroll' && type != 'scrollend')\n      return;\n    let scrollport = this;\n    let data = observed.get(scrollport);\n\n    // Mismatched addEventListener / removeEventListener\n    // TODO: Should we explicitly track added listeners to prevent this?\n    if (data === undefined)\n      return;\n\n    data[type]--;\n    // If there are still listeners, nothing more to do.\n    if (--data.listeners > 0)\n      return;\n\n    // Otherwise, remove the added listeners.\n    originalFn.apply(scrollport, ['scroll', data.scrollListener]);\n    observed.delete(scrollport);\n  }\n\n  observe(Element.prototype, 'addEventListener', onAddListener);\n  observe(window, 'addEventListener', onAddListener);\n  observe(document, 'addEventListener', onAddListener);\n  observe(Element.prototype, 'removeEventListener', onRemoveListener);\n  observe(window, 'removeEventListener', onRemoveListener);\n  observe(document, 'removeEventListener', onRemoveListener);\n  // TODO: Polyfill onscroll, onscrollend as well?\n}\n"],"names":["window","Event","pointers","Set","document","addEventListener","e","touch","changedTouches","add","identifier","passive","delete","snapshot","observed","WeakMap","observe","proto","method","handler","native","args","Array","prototype","slice","apply","arguments","this","unshift","originalFn","type","options","scrollport","data","get","undefined","scrollListener","evt","handle","cancelAnimationFrame","requestAnimationFrame","size","setTimeout","dispatchEvent","scrollendEvent","listeners","set","onRemoveListener","Element","onAddListener"],"mappings":"AAIA,KAFkB,gBAAHA,QAEC,CACd,QAAuB,IAAAC,MAAU,aACnBC,EAAG,IAAIC,IAGrBC,SAASC,iBAAiB,aAAcC,IACtC,IAAK,IAALC,KAAmBD,EAACE,eAClBN,EAASO,IAAIF,EAAMG,aACpB,CAACC,SAAS,IAEbP,SAASC,iBAAiB,WAAYC,IACpC,IAAK,SAAaA,EAAEE,eAClBN,EAASU,OAAOL,EAAMG,aACvB,CAACC,SAAS,IAGb,MAEAE,EAFYC,EAAG,IAAIC,QAKnB,SAASC,EAAQC,EAAOC,EAAQC,GAC9B,IAAUC,EAAGH,EAAMC,GACnBD,EAAMC,GAAU,WACd,IAAIG,EAAOC,MAAMC,UAAUC,MAAMC,MAAMC,UAAW,CAAC,IACnDN,EAAOK,MAAME,KAAMN,GACnBA,EAAKO,QAAQR,GACbD,EAAQM,MAAME,KAAMN,IAIxB,WAAuBQ,EAAYC,EAAMX,EAASY,GAIhD,GAAY,UAARD,GAA4B,aAARA,EACtB,OAEF,IAAIE,EAAaL,KACTM,EAAGnB,EAASoB,IAAIF,QACXG,IAATF,IACFA,EAAO,CACLG,eAAiBC,SACM,IAAXC,GACRC,qBAAqBD,GAEvBA,EAASE,sBAAsB,IAAMF,EAASE,sBAAsB,UAC3C,IAAb3B,IACRA,EAAWyB,GAEVA,EAASzB,EAAW,KACjBX,EAASuC,KAEXC,WAAWT,EAAKG,eAAgB,KAIhCJ,EAAWW,cAAcC,GAE3B/B,EAAWyB,OAIjBO,UAAW,GAEbhB,EAAWJ,MAAMO,EAAY,CAAC,SAAUC,EAAKG,iBAC7CtB,EAASgC,IAAId,EAAYC,IAE3BA,EAAKY,YAGP,SAASE,EAAiBlB,EAAYC,EAAMX,GAC1C,GAAY,UAARW,GAA4B,aAARA,EACtB,OACF,IAAIE,EAAaL,KACbM,EAAOnB,EAASoB,IAAIF,QAIXG,IAATF,IAGJA,EAAKH,OAECG,EAAKY,UAAY,IAIvBhB,EAAWJ,MAAMO,EAAY,CAAC,SAAUC,EAAKG,iBAC7CtB,EAASF,OAAOoB,KAGlBhB,EAAQgC,QAAQzB,UAAW,mBAAoB0B,GAC/CjC,EAAQhB,OAAQ,mBAAoBiD,GACpCjC,EAAQZ,SAAU,mBAAoB6C,GACtCjC,EAAQgC,QAAQzB,UAAW,sBAAuBwB,GAClD/B,EAAQhB,OAAQ,sBAAuB+C,GACvC/B,EAAQZ,SAAU,sBAAuB2C"}